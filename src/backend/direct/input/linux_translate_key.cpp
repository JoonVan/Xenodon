#include "backend/direct/input/linux_translate_key.h"
#include <linux/input-event-codes.h>

Key linux_translate_key(int key) {
    switch (key) {
        case KEY_SPACE: return Key::Space;
        case KEY_APOSTROPHE: return Key::Apostrophe;
        case KEY_COMMA: return Key::Comma;
        case KEY_MINUS: return Key::Minus;
        case KEY_DOT: return Key::Period;
        case KEY_SLASH: return Key::Slash;
        case KEY_0: return Key::Num0;
        case KEY_1: return Key::Num1;
        case KEY_2: return Key::Num2;
        case KEY_3: return Key::Num3;
        case KEY_4: return Key::Num4;
        case KEY_5: return Key::Num5;
        case KEY_6: return Key::Num6;
        case KEY_7: return Key::Num7;
        case KEY_8: return Key::Num8;
        case KEY_9: return Key::Num9;
        case KEY_SEMICOLON: return Key::Semicolon;
        case KEY_EQUAL: return Key::Equal;
        case KEY_A: return Key::A;
        case KEY_B: return Key::B;
        case KEY_C: return Key::C;
        case KEY_D: return Key::D;
        case KEY_E: return Key::E;
        case KEY_F: return Key::F;
        case KEY_G: return Key::G;
        case KEY_H: return Key::H;
        case KEY_I: return Key::I;
        case KEY_J: return Key::J;
        case KEY_K: return Key::K;
        case KEY_L: return Key::L;
        case KEY_M: return Key::M;
        case KEY_N: return Key::N;
        case KEY_O: return Key::O;
        case KEY_P: return Key::P;
        case KEY_Q: return Key::Q;
        case KEY_R: return Key::R;
        case KEY_S: return Key::S;
        case KEY_T: return Key::T;
        case KEY_U: return Key::U;
        case KEY_V: return Key::V;
        case KEY_W: return Key::W;
        case KEY_X: return Key::X;
        case KEY_Y: return Key::Y;
        case KEY_Z: return Key::Z;
        case KEY_LEFTBRACE: return Key::LeftBracket;
        case KEY_BACKSLASH: return Key::Backslash;
        case KEY_RIGHTBRACE: return Key::RightBracket;
        case KEY_GRAVE: return Key::GraveAccent;
        case KEY_ESC: return Key::Escape;
        case KEY_ENTER: return Key::Enter;
        case KEY_TAB: return Key::Tab;
        case KEY_BACKSPACE: return Key::Backspace;
        case KEY_INSERT: return Key::Insert;
        case KEY_DELETE: return Key::Delete;
        case KEY_RIGHT: return Key::Right;
        case KEY_LEFT: return Key::Left;
        case KEY_DOWN: return Key::Down;
        case KEY_UP: return Key::Up;
        case KEY_PAGEUP: return Key::PageUp;
        case KEY_PAGEDOWN: return Key::PageDown;
        case KEY_HOME: return Key::Home;
        case KEY_END: return Key::End;
        case KEY_CAPSLOCK: return Key::CapsLock;
        case KEY_SCROLLLOCK: return Key::ScrollLock;
        case KEY_NUMLOCK: return Key::NumLock;
        case KEY_PAUSE: return Key::Pause;
        case KEY_F1: return Key::F1;
        case KEY_F2: return Key::F2;
        case KEY_F3: return Key::F3;
        case KEY_F4: return Key::F4;
        case KEY_F5: return Key::F5;
        case KEY_F6: return Key::F6;
        case KEY_F7: return Key::F7;
        case KEY_F8: return Key::F8;
        case KEY_F9: return Key::F9;
        case KEY_F10: return Key::F10;
        case KEY_F11: return Key::F11;
        case KEY_F12: return Key::F12;
        case KEY_KP0: return Key::Kp0;
        case KEY_KP1: return Key::Kp1;
        case KEY_KP2: return Key::Kp2;
        case KEY_KP3: return Key::Kp3;
        case KEY_KP4: return Key::Kp4;
        case KEY_KP5: return Key::Kp5;
        case KEY_KP6: return Key::Kp6;
        case KEY_KP7: return Key::Kp7;
        case KEY_KP8: return Key::Kp8;
        case KEY_KP9: return Key::Kp9;
        case KEY_KPDOT: return Key::KpDecimal;
        case KEY_KPSLASH: return Key::KpDivide;
        case KEY_KPASTERISK: return Key::KpMultiply;
        case KEY_KPMINUS: return Key::KpSubtract;
        case KEY_KPPLUS: return Key::KpAdd;
        case KEY_KPENTER: return Key::KpEnter;
        case KEY_KPEQUAL: return Key::KpEqual;
        case KEY_LEFTSHIFT: return Key::LeftShift;
        case KEY_LEFTCTRL: return Key::LeftControl;
        case KEY_LEFTALT: return Key::LeftAlt;
        case KEY_RIGHTSHIFT: return Key::RightShift;
        case KEY_RIGHTCTRL: return Key::RightControl;
        case KEY_RIGHTALT: return Key::RightAlt;
        case KEY_MENU: return Key::Menu;
        default: return Key::Unknown;
    }
}
