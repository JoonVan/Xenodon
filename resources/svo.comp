#version 450

struct Node {
    uint children[8];
    uint color;
    uint is_leaf_depth;
};

struct Rect {
    ivec2 offset;
    uvec2 extent;
};

layout(local_size_x = 4, local_size_y = 4) in;

layout(binding = 0) readonly uniform UniformBuffer {
    Rect output_region;
    Rect display_region;
} uniforms;

layout(binding = 1) readonly buffer Octree {
    Node nodes[];
} octree;

layout(binding = 2, rgba8) restrict writeonly uniform image2D render_target;

void main() {
    uvec2 index = gl_GlobalInvocationID.xy;

    if (any(greaterThanEqual(index, uniforms.output_region.extent))) {
        return;
    }

    ivec2 pixel = uniforms.output_region.offset + ivec2(index);
    vec2 uv = vec2(pixel - uniforms.display_region.offset) / vec2(uniforms.display_region.extent);

    imageStore(render_target, ivec2(index), vec4(uv, 1, 1));
}
